library(MASS)
data()
Orange    #I decided to use a different data set!
summary(Orange)
names(Orange)
tree.age = Orange$age[1:7]              ##Predictor variable
tree.circ = Orange$circumference[1:7]   ##Response variable
simp.mod = lm(tree.circ ~ tree.age)
summary(simp.mod)
plot(simp.mod$residuals)
plot(tree.age, tree.circ, xlab="Age", ylab="Circumference", main="Simple Linear Regression")
abline(simp.mod, col="red")
?predict()
newOrange = data.frame(tree.age,tree.circ)
conf_int = predict(simp.mod, newOrange, interval="confidence", level=0.95)
pred_int = predict(simp.mod, newOrange, interval="predict", level=0.95)
lines(tree.age, conf_int[,2], col="red", lty=2)
lines(tree.age, conf_int[,3], col="red", lty=2)
lines(tree.age,  pred_int[,2], col="blue", lty=2)
lines(tree.age,  pred_int[,3], col="blue", lty=2)
names(Orange)
n=length(Orange[,1])
tree.circ = Orange$circumference + rnorm(n, 0, 1)               ##Response variable
tree.age = tree.circ/pi * (4.5 + rnorm(n,0,.8))                 ##Predictor variable 1
tree.circ
mean(tree.soil.ph)
tree.soil.ph = round(rnorm(n, 6.75, 1), 2)                      ##Predictor variable 2
mean(tree.soil.ph)
tree.age + tree.soil.ph
mod1 = lm(tree.circ ~ tree.age + tree.soil.ph)
summary(mod1)
plot(mod1)
tree.type = Orange$Tree
is.factor(tree.type)
is.ordered(tree.type)
tree.type
tree.type = factor(tree.type, ordered=FALSE)
summary(mod2)
mod2 = lm(tree.circ ~ tree.age + tree.soil.ph + tree.type)
summary(mod2)
summary(mod2)
electical_data = read.table("~/work/r_files/regression_analysis/electical,txt"\
, sep ="\t")
electical_data = read.table("~/work/r_files/regression_analysis/electical.txt"
,sep ="\t")
ele_data = read.table("~/work/r_files/regression_analysis/electrical.txt"
,sep ="\t")
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
ele_data
typeof(ele_data)
data.isD = (ele_data$ID=="D")
data.isD
data.isD = int(ele_data$ID=="D")
data.isD = as.integer(ele_data$ID=="D")
data.isD
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
ele_data
edata.isD = as.integer(ele_data$ID=="D")
edata.labor = ele_data$Labor_costs
edata.energy=ele_data$Energy_costs
edata.isD
edata.isD+edata.labor+edata.labor
edata.output = ele_data$Electrical_output
mod = lm(edata.output ~ edata.isD  + edata.labor+ edata.energy)
summary(mod2)
mod = lm(edata.output ~ edata.isD  + edata.labor+ edata.energy)
summary(mod)
Orange
edata.id = ele_data$ID
edata.id = factor(edata.id, ordered=FALSE)
edata.id = relevel(edata.id, ref="D")
edata.id
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
ele_data
edata.id = ele_data$ID
edata.id = factor(edata.id, ordered=FALSE)
edata.id = relevel(edata.id, ref="D")
edata.labor = ele_data$Labor_costs
edata.energy=ele_data$Energy_costs
edata.output = ele_data$Electrical_output
mod = lm(edata.output ~  edata.labor+ edata.energy + edata.isD)
summary(mod)
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
ele_data
edata.id = ele_data$ID
edata.id = factor(edata.id, ordered=FALSE)
edata.id = relevel(edata.id, ref="D")
edata.labor = ele_data$Labor_costs
edata.energy=ele_data$Energy_costs
edata.output = ele_data$Electrical_output
mod = lm(edata.output ~  edata.labor+ edata.energy + edata.id)
summary(mod)
plot(mod)
plot(mod)
ftest = var.test(edata.output~edata.labor+ edata.energy)
ftest = var.test(edata.output~edata.labor+ edata.energy, data = edata.labor+ edata.energy + edata.id)
?var.test
ftest = var.test(lm(edata.output ~  edata.labor+ edata.energy), lm(edata.output ~  edata.labor+ edata.energy + edata.id) )
summary(ftest)
ftest
?simint
??simint
?simint
?anova
?confint
?lm
mod = lm(edata.output ~  edata.labor+ edata.energy + edata.id)
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
##problem 1
edata.id = ele_data$ID
edata.id = factor(edata.id, ordered=FALSE)
edata.D = relevel(edata.id, ref="D")
edata.labor = ele_data$Labor_costs
edata.energy=ele_data$Energy_costs
edata.output = ele_data$Electrical_output
mod = lm(edata.output ~  edata.labor+ edata.energy + edata.id)
summary(mod)
##problem 3
ftest = var.test(lm(edata.output ~  edata.labor+ edata.energy), lm(edata.output ~  edata.labor+ edata.energy + edata.id) )
ftest
##problem 4
edata.A = relevel(edata.id, ref="A")
modA = lm(edata.output ~  edata.labor+ edata.energy + edata.A)
summary(modA)
a.labor = ele_data$Labor_costs[ele_data$ID =="A"]
a.labor
a.labor = ele_data$Energy_costs[ele_data$ID =="A"]
a.labor = ele_data$Labor_costs[ele_data$ID =="A"]
a.energy = ele_data$Energy_costs[ele_data$ID =="A"]
a.output = ele_data$Electrical_output[ele_data$ID =="A"]
a.labor = ele_data$Labor_costs[ele_data$ID =="A"]
a.energy = ele_data$Energy_costs[ele_data$ID =="A"]
a.output = ele_data$Electrical_output[ele_data$ID =="A"]
moda = lm(a.output ~  a.labor+ a.energy )
b.labor = ele_data$Labor_costs[ele_data$ID =="B"]
b.energy = ele_data$Energy_costs[ele_data$ID =="B"]
b.output = ele_data$Electrical_output[ele_data$ID =="B"]
modb = lm(b.output ~  b.labor+ b.energy )
c.labor = ele_data$Labor_costs[ele_data$ID =="C"]
c.energy = ele_data$Energy_costs[ele_data$ID =="C"]
c.output = ele_data$Electrical_output[ele_data$ID =="C"]
modc = lm(a.output ~  c.labor+ c.energy )
d.labor = ele_data$Labor_costs[ele_data$ID =="D"]
d.energy = ele_data$Energy_costs[ele_data$ID =="D"]
d.output = ele_data$Electrical_output[ele_data$ID =="D"]
modd = lm(d.output ~  d.labor+ d.energy )
a.labor = ele_data$Labor_costs[ele_data$ID =="A"]
a.energy = ele_data$Energy_costs[ele_data$ID =="A"]
a.output = ele_data$Electrical_output[ele_data$ID =="A"]
moda = lm(a.output ~  a.labor+ a.energy )
b.labor = ele_data$Labor_costs[ele_data$ID =="B"]
b.energy = ele_data$Energy_costs[ele_data$ID =="B"]
b.output = ele_data$Electrical_output[ele_data$ID =="B"]
modb = lm(b.output ~  b.labor+ b.energy )
c.labor = ele_data$Labor_costs[ele_data$ID =="C"]
c.energy = ele_data$Energy_costs[ele_data$ID =="C"]
c.output = ele_data$Electrical_output[ele_data$ID =="C"]
modc = lm(c.output ~  c.labor+ c.energy )
d.labor = ele_data$Labor_costs[ele_data$ID =="D"]
d.energy = ele_data$Energy_costs[ele_data$ID =="D"]
d.output = ele_data$Electrical_output[ele_data$ID =="D"]
modd = lm(d.output ~  d.labor+ d.energy )
?confint
confit(moda,0.9)
confint(moda,0.9)
confit(modb,0.9)
confit(modb,0.9)
confint(moda, 0.9)
confint(modb, 0.9)
confint(modc,0.9)
confint(modd,o.9)
confint(moda, 0.9)
confint(modb, 0.9)
confint(modc,0.9)
confint(modd,0.9)
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
##problem 1
edata.id = ele_data$ID
edata.id = factor(edata.id, ordered=FALSE)
edata.D = relevel(edata.id, ref="D")
edata.labor = ele_data$Labor_costs
edata.energy=ele_data$Energy_costs
edata.output = ele_data$Electrical_output
mod = lm(edata.output ~  edata.labor+ edata.energy + edata.id)
summary(mod)
##problem 2
plot(mod)
##problem 3
ftest = var.test(lm(edata.output ~  edata.labor+ edata.energy), lm(edata.output ~  edata.labor+ edata.energy + edata.id) )
ftest
##problem 4
a.labor = ele_data$Labor_costs[ele_data$ID =="A"]
a.energy = ele_data$Energy_costs[ele_data$ID =="A"]
a.output = ele_data$Electrical_output[ele_data$ID =="A"]
moda = lm(a.output ~  a.labor+ a.energy )
b.labor = ele_data$Labor_costs[ele_data$ID =="B"]
b.energy = ele_data$Energy_costs[ele_data$ID =="B"]
b.output = ele_data$Electrical_output[ele_data$ID =="B"]
modb = lm(b.output ~  b.labor+ b.energy )
c.labor = ele_data$Labor_costs[ele_data$ID =="C"]
c.energy = ele_data$Energy_costs[ele_data$ID =="C"]
c.output = ele_data$Electrical_output[ele_data$ID =="C"]
modc = lm(c.output ~  c.labor+ c.energy )
d.labor = ele_data$Labor_costs[ele_data$ID =="D"]
d.energy = ele_data$Energy_costs[ele_data$ID =="D"]
d.output = ele_data$Electrical_output[ele_data$ID =="D"]
modd = lm(d.output ~  d.labor+ d.energy )
confint(moda, 0.9)
confint(modb, 0.9)
confint(modc,0.9)
confint(modd,0.9)
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
##problem 1
edata.id = ele_data$ID
edata.id = factor(edata.id, ordered=FALSE)
edata.D = relevel(edata.id, ref="D")
edata.labor = ele_data$Labor_costs
edata.energy=ele_data$Energy_costs
edata.output = ele_data$Electrical_output
mod = lm(edata.output ~  edata.labor+ edata.energy + edata.id)
summary(mod)
##problem 2
plot(mod)
vapor = read.table("~/work/r_files/regression_analysis/HW3Prob1.txt"
,sep ="\t")
vapor
vapor$V1
vapor = read.table("~/work/r_files/regression_analysis/HW3Prob1.txt"
,sep =" ")
vapor
vapor$Temp
vapor = read.table("~/work/r_files/regression_analysis/HW3Prob1.txt"
,header = false)
vapor = read.table("~/work/r_files/regression_analysis/HW3Prob1.txt"
,header = FALSE)
vapor
vapor$Temp
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt"
,header = FALSE)
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt",
sep = "\t",
col.names = c("Temp","Vapor_Pressure"),
)
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt",
sep = " ",
col.names = c("Temp","Vapor_Pressure"),
)
vapor
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt",
sep = " ",
##col.names = c("Temp","Vapor_Pressure"),
)
vapor
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt",
sep = " ",
col.names = c("Temp","Vapor_Pressure"),
header = FALSE,
)
vapor
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt",
sep = " ",
header = FALSE,
)
vapor
ele_data = read.table("~/work/r_files/regression_analysis/electrical_data.txt"
,sep ="\t")
ele_data
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob2.txt",
sep = " ",
header = FALSE,
)
vapor
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob2.txt",
sep = " ",
header = TRUE,
)
vapor
vapor <- read.table("~/work/r_files/regression_analysis/HW3Prob1.txt",
sep = " ",
header = TRUE,
)
vapor
plot(vapor$Temp,vapor$Vapor_Pressure, main ="Scatter diagram",
xlab = "Temp", ylab = "Vapor Pressure", pch = 19)
plot(vapor$Temp,vapor$Vapor_Pressure, main ="Scatter diagram",
xlab = "Temp", ylab = "Vapor Pressure")
mod = lm(vapor$Temp,vapor$Vapor_Pressure)
mod = lm(vapor$Temp~vapor$Vapor_Pressure)
summary(mod)
plot(mod)
print("c")
log_pressure = log(vapor$Vapor_Pressure)
reciprocal_temp = -1/vapor$Temp
trans_mod = lm(reciprocal_temp~log_pressure)
summary(mod)
plot(mod)
plot(trans_mod)
trans_mod = lm(reciprocal_temp~log_pressure)
summary(trans_mod)
weight_loss <- read.table("~/work/r_files/regression_analysis/HW3Prob2.txt",
sep = " ",
header = TRUE,
)
weight_loss
print("a) Fit a second-order polynomial")
wloss = weight_loss$WeightLoss
wloss2 = wloss^2
wloss
wloss2
mod = lm(weight_loss$Months~wloss + wloss2)
summary(mod)
mod3 = lm(weight_loss$Months~wloss + wloss2)
summary(mod3)
plot(mod3)
install.packages("MPV")
MPV
data(cement)
cement
Cement
help(MPV)
??MPV
table.b3
library(MPV)
table.b3
data = table.b3
set.seed(10)
random_8 = data[sample(.N,8)]
random_8 = data[sample(nrow(data)),8)]
random_8 = data[sample(nrow(data),8)]
random_8 = data[sample(1:nrow(data),8,replace = FALSE)]
data = table.b3
random_8 = data[sample(1:nrow(data),8,replace = FALSE)]
sample(data,8,replace = FALSE)]
sample(data,8,replace = FALSE)
set.seed(1)
sample(data,8,replace = FALSE)
sample(1:nrow(data),8,replace = FALSE)
set.seed(1)
sample(1:nrow(data),8,replace = FALSE)
sample = data[sample(1:nrow(data),8,replace = FALSE)]
sample = data[sample(1:nrow(data),8,replace = FALSE),]
sample
larger_data = data[-sample(1:nrow(data),8,replace = FALSE),]
larger_data
data
mod4 = lm(data = larger_data)
summary(mod4)
mod4$coefficients
sample
predict(mod4,sample)
sample$y
clearPushBack()
clear
source('~/work/r_files/regression_analysis/hw3.R', echo=TRUE)
plot(trans_mod)
plot(trans_mod)
sleep
group1.sleep = sleep[1:10,]
plot(group1.sleep$extra)
t.test(group1.sleep$extra, mu=0.5, conf.level=0.90)
extra1 = group1.sleep$extra
extra
extra1
for(i in 1:10){
if(extra1[i]<0){extra1.cat[i] = "A"}
else(extra1.cat[i] = "B")
}
extra1.cat = NULL
for(i in 1:10){
if(extra1[i]<0){extra1.cat[i] = "A"}
else(extra1.cat[i] = "B")
}
extra1.cat
table(extra1<0)
extra
extra1
rm(list=ls())
library(MASS)
library(gmodels)
data <- read.table(file="electrical_data.txt", header=T)
attach(data)
installed.packages(gmodels)
installed.packages("gmodels")
library(gmodels)
installed.packages("gmodels")
data <- read.table(file="electrical_data.txt", header=T)
data <- read.table(file="./electrical_data.txt", header=T)
data <- read.table(file="~/work/r_files/hw_sol/electrical_data.txt", header=T)
attach(data)
data
is.factor(city)
is.factor(City)
is.ordered(City)
City = relevel(City, ref ="D")
summary(mod)
mod = lm(Electrical_output ~ City + Labor_costs + Energy_costs)
summary(mod)
shapiro.test(mod$residuals)
par(mfrow = c(2, 2))
plot(mod)
shapiro.test(mod$residuals)
mat = rbind(c(0,0,0,0,1,0), c(0,0,0,0,0,1))
glh.test(mod,mat)
mat
install.packages("gmodels")
library(gmodels)
glh.test(mod,mat)
TukeyHSD(aovcity,conf.level = 0.9)
aovcity = aov(Electrical_output~City)
TukeyHSD(aovcity,conf.level = 0.9)
rm(list = ls())
library(quantmod)
install.packages(quantmod)
install.packages('quantmod')
library(quantmod)
temp <- read.csv("Tickers.csv", header = T)
setwd("./work/python/cqa/price_data/")
temp <- read.csv("Tickers.csv", header = T)
tickers <- as.vector(temp$Ticker)
StockPriceDaily <- function(symbol){
data <- new.env()
start_date <- as.Date('2017-05-07')  # Changing your Start Date
end_date <- as.Date('2017-11-09') # Changing your End Date
getSymbols(symbol,env = data, from = start_date, to = end_date,src = "yahoo")
temp <- get(symbol,envir = data)
price <- as.data.frame(temp)
colnames(price) <- c("Open","High","Low","Close","Volume","Adjusted")
write.csv(price,paste(symbol,".csv",sep=""))
}
{StockPriceDaily(tickers[i])}
StockPriceDaily <- function(symbol){
data <- new.env()
start_date <- as.Date('2017-05-07')  # Changing your Start Date
end_date <- as.Date('2017-11-09') # Changing your End Date
getSymbols(symbol,env = data, from = start_date, to = end_date,src = "yahoo")
temp <- get(symbol,envir = data)
price <- as.data.frame(temp)
colnames(price) <- c("Open","High","Low","Close","Volume","Adjusted")
write.csv(price,paste(symbol,".csv",sep=""))
}
{StockPriceDaily(tickers[i])}
for (i in seq(1:length(tickers)))
{StockPriceDaily(tickers[i])}
library(quantmod)
StockPriceDaily <- function(symbol){
data <- new.env()
start_date <- as.Date('2017-05-07')  # Changing your Start Date
end_date <- as.Date('2017-11-09') # Changing your End Date
getSymbols(symbol,env = data, from = start_date, to = end_date,src = "yahoo")
temp <- get(symbol,envir = data)
price <- as.data.frame(temp)
colnames(price) <- c("Open","High","Low","Close","Volume","Adjusted")
write.csv(price,paste(symbol,".csv",sep=""))
}
for (i in seq(1:length(tickers)))
{StockPriceDaily(tickers[i])}
rm(list = ls())
library(quantmod)
install.packages("quantmod")
library(quantmod)
insetwd("./work/python/cqa/price_data/")
temp <- read.csv("Tickers.csv", header = T)
tickers <- as.vector(temp$Ticker)
StockPriceDaily <- function(symbol){
data <- new.env()
start_date <- as.Date('2017-05-07')  # Changing your Start Date
end_date <- as.Date('2017-11-09') # Changing your End Date
getSymbols(symbol,env = data, from = start_date, to = end_date,src = "yahoo")
temp <- get(symbol,envir = data)
price <- as.data.frame(temp)
colnames(price) <- c("Open","High","Low","Close","Volume","Adjusted")
write.csv(price,paste(symbol,".csv",sep=""))
}
for (i in seq(1:length(tickers)))
{StockPriceDaily(tickers[i])}
library(quantmod)
install.packages("quantmod")
install.packages("quantmod")
library(quantmod)
temp <- read.csv("Tickers.csv", header = T)
tickers <- as.vector(temp$Ticker)
StockPriceDaily <- function(symbol){
data <- new.env()
start_date <- as.Date('2017-05-07')  # Changing your Start Date
end_date <- as.Date('2017-11-09') # Changing your End Date
getSymbols(symbol,env = data, from = start_date, to = end_date,src = "yahoo")
temp <- get(symbol,envir = data)
price <- as.data.frame(temp)
colnames(price) <- c("Open","High","Low","Close","Volume","Adjusted")
write.csv(price,paste(symbol,".csv",sep=""))
}
for (i in seq(1:length(tickers)))
{StockPriceDaily(tickers[i])}
StockPriceDaily <- function(symbol){
data <- new.env()
start_date <- as.Date('2015-01-01')  # Changing your Start Date
end_date <- as.Date('2017-11-09') # Changing your End Date
getSymbols(symbol,env = data, from = start_date, to = end_date,src = "yahoo")
temp <- get(symbol,envir = data)
price <- as.data.frame(temp)
colnames(price) <- c("Open","High","Low","Close","Volume","Adjusted")
write.csv(price,paste(symbol,".csv",sep=""))
}
for (i in seq(1:length(tickers)))
{StockPriceDaily(tickers[i])}
